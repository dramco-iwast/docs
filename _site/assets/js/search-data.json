{
  
  "0": {
    "title": "BME680",
    "content": "See description file here. .",
    "url": "http://localhost:4000/sensor-boards/BME680.html",
    "relUrl": "/sensor-boards/BME680.html"
  }
  ,"1": {
    "title": "Button Sensor",
    "content": "The button sensor hosts five buttons… .",
    "url": "http://localhost:4000/sensor-boards/button-sensor.html",
    "relUrl": "/sensor-boards/button-sensor.html"
  }
  ,"2": {
    "title": "Check poll interval",
    "content": "Check poll interval . Command . AT+POL?&lt;sensor-id&gt; &lt;metric&gt; . Response . +POL: &lt;poll-interval&gt; . Description . Check the poll interval (Explain what this is? Here? Somewhere else?) that is used to check a sensors’ readings. The is returned as a decimal string. When an invalid sensor ID or metric is specified, is an empty string. . Example . Command&gt; AT+POL?01 2 Response&gt; +POL: 300 . Request poll interval for sensor 0x01, metric 2. Current setting is 300 seconds, i.e., every 5 minutes. .",
    "url": "http://localhost:4000/at-commands/check-poll-interval.html",
    "relUrl": "/at-commands/check-poll-interval.html"
  }
  ,"3": {
    "title": "Check threshold",
    "content": "Check threshold . Command . AT+TH?&lt;sensor-id&gt; &lt;metric&gt; . Response . +TH: &lt;thresholds-enabled&gt; &lt;threshold-level-low&gt; &lt;threshold-level-high&gt; . Description . Check the threshold settings for the sensor with ID (opnieuw: waar leggen we thresholds uit?). The field is a 2-digit hex string. The field will be either ‘0’ (not enabled) or ‘1’ (enabled). Both and are decimal strings (between 0 and 65535). When an invalid sensor ID is specified, only +TH: is returned. . Example . Command&gt; AT+TH?=02 1 Response&gt; +TH: 1 100 5000 . Check the threshold settings for sensor 0x02, metric 1. Thresholds are enabled with threshold-level-low = 100 and threshold-level-high = 5000. .",
    "url": "http://localhost:4000/at-commands/check-thresold.html",
    "relUrl": "/at-commands/check-thresold.html"
  }
  ,"4": {
    "title": "Close",
    "content": "Close . Command . AT+CLS . Response . OK | ERROR . Description . Close the configuration context. The motherboard will stop listening to serial communication, enabling to enter a low power state. It will push the updated configurations to all connected sensors. . Example . Command&gt; AT+CLS Response&gt; OK No errors occured. .",
    "url": "http://localhost:4000/at-commands/finish.html",
    "relUrl": "/at-commands/finish.html"
  }
  ,"5": {
    "title": "Documentation",
    "content": "Documentation. .",
    "url": "http://localhost:4000/",
    "relUrl": "/"
  }
  ,"6": {
    "title": "Motherboard",
    "content": "",
    "url": "http://localhost:4000/motherboard/",
    "relUrl": "/motherboard/"
  }
  ,"7": {
    "title": "Sensor Boards",
    "content": "The functionalities and possible configurations for each sensor is defined in the descrption files. . It is structured as: . name: &quot;Sensor name&quot; # How to parse the raw byte payload coming from TTN parse-payload: !!js/function &gt; function f(value) { error(&quot;Not Implemented yet&quot;) }(); # Information regarding the sensor board (Dutch and English) info: nl: |- Deze sensor bevat vier verschillende functionaliteiten. Het kan de temperatuur, druk, Luchtkwaliteit en vochtigheid opmeten. en: |- This sensor has four functionalities. It can measure the temperature, air quality, pressure en humidity. # Each sensor has at least one metric which can be measured # For each metric we define the following: sensor-metric: - unit: &quot;°C&quot; quantity: nl: &quot;Temperatuur&quot; en: &quot;Temperature&quot; info: nl: &quot;Meet de temperatuur in °C.&quot; en: &quot;Measure the temperature in °C.&quot; size: 2 # in bytes # machine interpretation of the raw byte payload type: &quot;uint16&quot; # number of decimals after comma precision: 2 # two functions converting the data between machine and human readible values # For instance: 15.2°C (human) can be converted to 15.2*100=152 in order to have one digit after comma convert-to-machine: !!js/function &gt; function f(value) {} return value + 273.15 ; }(); convert-to-human: !!js/function &gt; function f(value) { return value - 273.15; }(); # metric specific configuration config: - threshold: true threshold-max: 58 threshold-min: -40 minumum-polling-interval: 10 # in seconds - unit: &quot;-&quot; quantity: en: &quot;Air Quality Indication&quot; nl: &quot;Luchtkwaliteitsindicatie&quot; info: nl: |- Meet hoe vervuild de lucht rondom de module is. Kijk of er een risico is voor de gezondheid. en: |- Measure how polluted the air is. Evaluate if there are any health risks possible. size: 2 # in bytes type: &quot;uint16&quot; precision: 0 # number of decimals after comma convert-to-machine: !!js/function &gt; # no convertion needed function f(value) {} return value; }(); convert-to-human: !!js/function &gt; # no convertion needed function f(value) { return value; }(); config: - threshold: true threshold-max: 500 threshold-min: 0 minumum-polling-interval: 10 # in seconds .",
    "url": "http://localhost:4000/sensor-boards/",
    "relUrl": "/sensor-boards/"
  }
  ,"8": {
    "title": "AT Commands",
    "content": "Serial Communication . When the motherboard is powered on (due to a power cycle), it starts listening (serial) for 10 seconds. If there is no incoming data in that window, the serial communication is stopped. A power cycle is required, to re-enter this phase, so it can receive AT commands. . All AT commands changing the configuration of the sensors, will be stored in non-volatile memory. To push these configurations to sensors, the close command needs to be executed. This will also halt the serial communication, as the motherboard does not process any incoming data. . Data Format and Identifiers . Sensor id, sensor type and motherboard id -&gt; hex string with fixed size Poll interval, threshold levels and metric specifiers all decimals (ascii string). .",
    "url": "http://localhost:4000/at-commands/",
    "relUrl": "/at-commands/"
  }
  ,"9": {
    "title": "List Sensors",
    "content": "List sensors . Command . AT+LS? . Response . +LS: {&lt;sensor1&gt; &lt;sensor2&gt; ...} . Description . List the sensors that are connected to the motherboard. The motherboard will respond with a space-separated list of sensors. When no sensors are connected this list is empty. The field is sent as a 4-digit hex string in ASCII format. The first 2 digits are the sensors’ ID The last 2 digits are the sensors&#39; type. For a list of supported sensor types, see TODO. Based on the sensor type, the UI can determine what metrics are supported. . Example . Command&gt; AT+LS? Response&gt; +LS: 0168 0221 Two sensors are connected. Sensor 0x01 has type 0x68, sensor 0x02 has type 0x21. .",
    "url": "http://localhost:4000/at-commands/list-sensors.html",
    "relUrl": "/at-commands/list-sensors.html"
  }
  ,"10": {
    "title": "Ping",
    "content": "Ping (get motherboard ID) . Command . AT+PNG? . Response . +PNG: &lt;motherboard-id&gt; . Description . Ping the motherboard. The motherboard will respond with its motherboard ID This is a sixteen bit unsigned identifier. The ID is sent as a 4-digit hex string in ASCII format. . Example . Command&gt; AT+PNG? Response&gt; +PNG: 474F The board has id 0x474F .",
    "url": "http://localhost:4000/at-commands/ping.html",
    "relUrl": "/at-commands/ping.html"
  }
  ,"11": {
    "title": "Set poll interval",
    "content": "Set poll interval . Command . AT+POL=&lt;sensor-id&gt; &lt;metric&gt; &lt;poll-interval&gt; . Response . OK | ERROR . Description . Set the poll interval for the sensor with ID &lt;sensor-id&gt;. The &lt;sensor-id&gt; field is a 2-digit hex string. The &lt;poll-interval&gt; formatted as a decimal string. When the poll interval is changed successfully, the motherboard responds with OK. Otherwise, e.g., when an invalid sensor ID is specified, the response is ERROR. . Bedenkingen geof (maar moet dat hier)? • Minimum poll interval: 5 minutes? (Not enforced yet in software). • Maximum value 65535 (approx.. 18 hours). • A poll interval of 0 will be treated as “never poll”, sensor will operate threshold-based. . Example . Command&gt; AT+POL=01 1 600 Response&gt; OK . Set poll interval for sensor 0x01, metric 1 to 600 seconds, i.e., every 10 minutes. .",
    "url": "http://localhost:4000/at-commands/set-poll-interval.html",
    "relUrl": "/at-commands/set-poll-interval.html"
  }
  ,"12": {
    "title": "Microphone",
    "content": "Components of the microphone module . This section will give an overview of the components of the microphone module. . Microphone . A Vesper VM1010 is chosen because it is a low power microphone with a good performance. The microphone consumes 87 µA in active mode (measured). There is also a mode-pin to enable sleep-mode which reduces the current to approximately 5µA. To enable the sleep mode, one has to supply a low level voltage to the mode pin and vice versa. The sensitivity of the microphone equals -38 dBV while the frequency response curve is flat for the audible frequencies. . High pass filter . The passive high pass filter has a -3dB-frequency of 100 Hz and removes the DC-offset of 0.8 V supplied by the microphone. Only 1 alternation of the sound wave is taken into account. This reduces the component cost and increases the stability of the circuit. . Amplifier . An non-inverting amplifier is dimensioned to amplify the signal with 30 dB. A TLV341 is used as operational amplifier because it’s gain bandwidth product of 2.3 MHz is rather high. The quiescent current measures approximately 70 µA per channel. . Low pass filter . A Sallen-Key low pass filter is dimensioned with a -3dB-frequency of 8 kHz to reduce the amplitude of the unwanted ultrasonic sounds. An amplification of 2.73 dB amplifies the signal to an amplitude which is appropriate for the ADC. . Analog-to-digital converter . The 12 bit ADC of the PIC16F18446 samples the analog signal to 16-bit values with a sample frequency of 20 kHz. Because only 1 alternation is used, the ADC will measure the amplitude and not the peak-to-peak value. The PIC16F18446 will sample 1000 values to make sure the max value is approximated as close as possible to the real signal originating from the analog circuit. Whenever a threshold-value is exceeded, an interrupt will inform the motherboard that a dB value is ready. . Communication . The microphone module communicates with the motherboard via I2C-commands to set the threshold value or timing interval. .",
    "url": "http://localhost:4000/sensor-boards/sound-level-sensor.html",
    "relUrl": "/sensor-boards/sound-level-sensor.html"
  }
  
}